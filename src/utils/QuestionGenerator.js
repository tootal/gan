let 疑问句式 = [
  '{论述}, 你怎么看?',
  '如何看待{论述}?',
  '{论述}可以吗?',
  '{论述}怎么办?',
  '如何评价{论述}?',
  '为什么{论述}?',
  '{论述}是什么?',
  '请问, {论述}是什么?',
  '{论述}问题',
];

let 论述句式 = [
  '{地区}{主语}{谓语}{宾语}',
];

let 数据 = {
  地区: [
    '赣州市',
    '章贡区',
    '南康区',
    '赣县区',
    '信丰县',
    '大余县',
    '上犹县',
    '崇义县',
    '安远县',
    '龙南县',
    '定南县',
    '全南县',
    '宁都县',
    '于都县',
    '兴国县',
    '会昌县',
    '寻乌县',
    '石城县',
    '瑞金市',
  ],
  主语: [
    '政府',
    '学校',
    '企业',
    '人民',
  ],
  谓语 :[
    '发展',
    '促进',
    '推进',
  ],
  宾语: [
    '教育',
    '文化',
    '经济',
    '科技',
    '政治',
  ],
};

function 随便取一个(列表) {
  let 坐标 = Math.floor(Math.random() * 列表.length);
  return 列表[坐标];
}

function 生成论述() {
  let 论述 = 随便取一个(论述句式);
  for (let 占位符 of ['地区', '主语', '谓语', '宾语']) {
    论述 = 论述.replace(`{${占位符}}`, 随便取一个(数据[占位符]));
  }
  return 论述;
}

function 生成疑问句(论述) {
  let 句子 = 随便取一个(疑问句式);
  句子 = 句子.replace('{论述}', 论述);
  return 句子;
}

let StatementGenerator = 生成论述;
let QuestionGenerator = 生成疑问句;

export {
  StatementGenerator,
  QuestionGenerator,
};